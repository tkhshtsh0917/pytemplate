name: Generate Documents

on: push

jobs:
  gen-docs:
    name: Generate Documents
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci: auto build documents.')"
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
        architecture: 'x64'

    - name: Get Python Version
      id: get-python-version
      shell: bash
      run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

    - name: Install Poetry
      shell: bash
      run: python -m pip install poetry

    - name: Setup Cache Poetry Dependencies
      uses: actions/cache@v1
      id: cache
      with:
        path: ~/.virtualenvs
        key: poetry-${{ runner.os }}-${{ steps.get-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          poetry-${{ runner.os }}-${{ steps.get-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Configure poetry
      shell: bash
      run: |
        python -m poetry config virtualenvs.in-project false
        python -m poetry config virtualenvs.path ~/.virtualenvs

    - name: Install Poetry Dependencies
      shell: bash
      run: python -m poetry install --no-interaction
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Build Documents
      shell: bash
      run: |
        python -m poetry run sphinx-apidoc -f -o ./docs ./pytemplate
        mkdir ./docs/build
        python -m poetry run sphinx-build -b html ./docs ./docs/build

    - name: Deploy GitHub Pages
      uses: actions/checkout@v2
      with:
        ref: gh-pages
      env:
        GITHUB_USER: "deploy_user"
        GITHUB_EMAIL: "deploy_user@example.com"
      run: |
          git config --local user.name "${GITHUB_USER}"
          git config --local user.email "${GITHUB_EMAIL}"
          git remote set-url origin git@github.com:${GITHUB_REPOSITORY}.git
          git add ./docs/build
          git commit -m "ci: auto build documents."
          git push
